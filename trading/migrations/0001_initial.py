# Generated by Django 5.2.3 on 2025-07-01 23:31

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('angel_api', '0001_initial'),
        ('portfolio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('strategy_type', models.CharField(choices=[('MOMENTUM', 'Momentum'), ('MEAN_REVERSION', 'Mean Reversion'), ('BREAKOUT', 'Breakout'), ('NEWS_BASED', 'News Based'), ('TECHNICAL', 'Technical Analysis'), ('CUSTOM', 'Custom')], max_length=50)),
                ('config_parameters', models.JSONField(default=dict, help_text='Strategy configuration parameters')),
                ('is_active', models.BooleanField(default=True)),
                ('is_backtest_only', models.BooleanField(default=False)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('total_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TradingBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('is_paper_trading', models.BooleanField(default=True)),
                ('max_positions', models.IntegerField(default=5)),
                ('position_size', models.DecimalField(decimal_places=2, default=10.0, help_text='Position size as percentage of portfolio', max_digits=5)),
                ('stop_loss_percent', models.DecimalField(decimal_places=2, default=2.0, max_digits=5)),
                ('take_profit_percent', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('daily_loss_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('check_interval_minutes', models.IntegerField(default=5)),
                ('trading_hours_only', models.BooleanField(default=True)),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_runs', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_bots', to='portfolio.portfolio')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bots', to='trading.tradingstrategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold')], max_length=10)),
                ('confidence', models.DecimalField(decimal_places=2, help_text='Signal confidence 0-100', max_digits=5)),
                ('entry_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('stop_loss_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('signal_strength', models.CharField(choices=[('WEAK', 'Weak'), ('MODERATE', 'Moderate'), ('STRONG', 'Strong'), ('VERY_STRONG', 'Very Strong')], default='MODERATE', max_length=20)),
                ('analysis_data', models.JSONField(default=dict, help_text='Technical analysis data')),
                ('news_sentiment', models.CharField(blank=True, choices=[('POSITIVE', 'Positive'), ('NEGATIVE', 'Negative'), ('NEUTRAL', 'Neutral')], max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_executed', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='angel_api.nsesymbol')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='trading.tradingstrategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analysis_date', models.DateField(default=django.utils.timezone.now)),
                ('sma_20', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('sma_50', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rsi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('macd', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('bollinger_upper', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('bollinger_lower', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_change_1d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('price_change_7d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('volume_avg_20d', models.BigIntegerField(blank=True, null=True)),
                ('news_sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('social_sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('analyst_rating', models.CharField(blank=True, choices=[('STRONG_BUY', 'Strong Buy'), ('BUY', 'Buy'), ('HOLD', 'Hold'), ('SELL', 'Sell'), ('STRONG_SELL', 'Strong Sell')], max_length=20, null=True)),
                ('analysis_result', models.JSONField(default=dict)),
                ('recommendation', models.CharField(blank=True, choices=[('STRONG_BUY', 'Strong Buy'), ('BUY', 'Buy'), ('HOLD', 'Hold'), ('SELL', 'Sell'), ('STRONG_SELL', 'Strong Sell')], max_length=20, null=True)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_analysis', to='angel_api.nsesymbol')),
            ],
            options={
                'ordering': ['-analysis_date', 'symbol__symbol'],
                'indexes': [models.Index(fields=['symbol', '-analysis_date'], name='trading_mar_symbol__a8e777_idx'), models.Index(fields=['recommendation', '-analysis_date'], name='trading_mar_recomme_6184ad_idx')],
                'unique_together': {('symbol', 'analysis_date')},
            },
        ),
        migrations.CreateModel(
            name='NewsAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('headline', models.TextField()),
                ('source', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True)),
                ('published_at', models.DateTimeField()),
                ('sentiment', models.CharField(choices=[('POSITIVE', 'Positive'), ('NEGATIVE', 'Negative'), ('NEUTRAL', 'Neutral')], max_length=20)),
                ('sentiment_score', models.DecimalField(decimal_places=2, help_text='Sentiment score -1 to 1', max_digits=5)),
                ('market_impact', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='LOW', max_length=20)),
                ('keywords', models.JSONField(default=list)),
                ('categories', models.JSONField(default=list)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_notes', models.TextField(blank=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_analysis', to='angel_api.nsesymbol')),
            ],
            options={
                'ordering': ['-published_at'],
                'indexes': [models.Index(fields=['symbol', 'sentiment', '-published_at'], name='trading_new_symbol__17e4ae_idx'), models.Index(fields=['market_impact', '-published_at'], name='trading_new_market__e98cc8_idx')],
            },
        ),
        migrations.CreateModel(
            name='TradingExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('execution_type', models.CharField(choices=[('SIGNAL_ENTRY', 'Signal Entry'), ('STOP_LOSS', 'Stop Loss'), ('TAKE_PROFIT', 'Take Profit'), ('MANUAL', 'Manual'), ('TIMEOUT', 'Timeout')], max_length=20)),
                ('order_id', models.CharField(blank=True, max_length=100)),
                ('quantity', models.IntegerField()),
                ('requested_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('executed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('EXECUTED', 'Executed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='trading.tradingbot')),
                ('signal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='trading.tradingsignal')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['bot', 'status', '-created_at'], name='trading_tra_bot_id_6ecbaf_idx'), models.Index(fields=['signal', '-created_at'], name='trading_tra_signal__7fe64f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['strategy', 'is_active', '-created_at'], name='trading_tra_strateg_64bffb_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['symbol', 'signal_type', '-created_at'], name='trading_tra_symbol__ba7ee6_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['is_executed', '-created_at'], name='trading_tra_is_exec_163b14_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tradingbot',
            unique_together={('portfolio', 'name')},
        ),
    ]
